name: Manual Merge Develop to Main

on:
  workflow_dispatch: # Ch·ªâ k√≠ch ho·∫°t khi nh·∫•n n√∫t "Run workflow"
    inputs:
      target_branch:
        description: "Target branch to merge into"
        required: true
        default: "main"

jobs:
  manual-merge:
    runs-on: ubuntu-latest
    steps:
      # 1. Clone repository
      - name: üõ†Ô∏è Checkout Repository üõ†Ô∏è
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2. C·∫•u h√¨nh Git
      - name: ‚öôÔ∏è Configure Git ‚öôÔ∏è
        env:
          GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
          GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
        run: |
          git config user.name "$GIT_USER_NAME"
          git config user.email "$GIT_USER_EMAIL"

      # 3. Ki·ªÉm tra n·∫øu c√≥ conflict
      - name: üîç Check for Merge Conflicts
        id: check-conflict
        run: |
          git fetch origin ${{ github.event.inputs.target_branch }}
          git fetch origin develop
          git checkout ${{ github.event.inputs.target_branch }}
          git merge --no-commit --no-ff develop || echo "::set-output name=conflict::true"
        continue-on-error: true

      - name: ‚ùå Handle Conflict
        if: steps.check-conflict.outputs.conflict == 'true'
        run: |
          echo "‚ùå Merge conflict detected! Please resolve conflicts manually."
          exit 1

      # 4. Merge develop v√†o main n·∫øu kh√¥ng c√≥ conflict
      - name: ‚úÖ Merge Develop into Main ‚úÖ
        if: steps.check-conflict.outputs.conflict != 'true'
        run: |
          git checkout ${{ github.event.inputs.target_branch }}
          git merge develop --no-ff -m "Manual merge from develop to ${{ github.event.inputs.target_branch }}"
          git push origin ${{ github.event.inputs.target_branch }}
