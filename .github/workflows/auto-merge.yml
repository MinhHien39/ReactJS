name: Auto Merge Develop to Main
on:
  push:
    branches:
      - develop # K√≠ch ho·∫°t khi c√≥ thay ƒë·ªïi tr√™n nh√°nh develop
jobs:
  auto-merge:
    runs-on: ubuntu-latest
    environment: auto-merge-env

    steps:
      # 1. Clone repository
      - name: üõ†Ô∏è Checkout Repository üõ†Ô∏è
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2. Ki·ªÉm tra commit message cu·ªëi c√πng
      - name: üîç Check Commit Message for Prefix üîç
        id: check-commit-message
        run: |
          LAST_COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "Last commit message: $LAST_COMMIT_MSG"
          if ! echo "$LAST_COMMIT_MSG" | grep -q "\[MERGE\]"; then
            echo "‚ùå Commit message does not contain [MERGE]. Skipping merge."
            exit 1
          fi
          echo "‚úÖ Commit message contains [MERGE]. Proceeding to merge."

      # 3. C·∫•u h√¨nh Git
      - name: ‚öôÔ∏è Configure Git ‚öôÔ∏è 
        env:
          GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
          GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
        run: |
          git config user.name "$GIT_USER_NAME"
          git config user.email "$GIT_USER_EMAIL"
          echo "::set-output name=git_user_name::$GIT_USER_NAME"
          echo "::set-output name=git_user_email::$GIT_USER_EMAIL"

      # 4. Merge develop v√†o main v·ªõi commit message gi·ªØ nguy√™n
      - name: ‚úÖ Merge Develop into Main ‚úÖ
        if: success()
        run: |
          git checkout main
          git merge develop --no-ff --no-edit -m "[MERGE] Auto-merged develop into main"
          git push origin main
