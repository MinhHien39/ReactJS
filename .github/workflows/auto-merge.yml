name: Auto Merge Develop to Main with Conflict Resolution

on:
  pull_request:
    branches:
      - develop
    types:
      - closed # Kích hoạt khi Pull Request vào develop được merged

jobs:
  auto-merge:
    runs-on: ubuntu-latest

    steps:
      # 1. Clone repository
      - name: 🛠️ Checkout Repository 🛠️
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2. Kiểm tra nếu Pull Request đã được merged
      - name: 🔍 Check if PR is Merged 🔍
        run: |
          if [ "${{ github.event.pull_request.merged }}" != "true" ]; then
            echo "❌ Pull request has not been merged. Exiting."
            exit 1
          fi
          echo "✅ Pull request has been merged into develop. Proceeding to merge develop into main."

      # 3. Cấu hình Git
      - name: ⚙️ Configure Git ⚙️
        env:
          GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
          GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
        run: |
          git config user.name "$GIT_USER_NAME"
          git config user.email "$GIT_USER_EMAIL"

      # 4. Thử merge develop vào main
      - name: 🔄 Attempt Merge Develop into Main 🔄
        id: attempt-merge
        run: |
          git checkout main
          git pull origin main
          git merge develop --no-ff --no-edit -m "[MERGE] Auto-merged develop into main" || true

      # 5. Xử lý conflict với chiến lược `theirs`
      - name: ⚠️ Resolve Conflicts with Theirs Strategy ⚠️
        if: failure()
        run: |
          echo "⚠️ Conflict detected. Starting merge with 'theirs' strategy..."
          git merge develop -X theirs || true
          git status --short | grep "^UU" | awk '{print $2}' | xargs git add || true
          git commit -m "[MERGE] Resolved conflicts using 'theirs' strategy" || true

      # 6. Push nếu merge thành công
      - name: ✅ Push Final Merge ✅
        run: |
          git push origin main || true
